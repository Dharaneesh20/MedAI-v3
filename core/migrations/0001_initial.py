# Generated by Django 4.2 on 2025-08-14 03:43

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="ConversationHistory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "analysis_type",
                    models.CharField(
                        choices=[
                            ("text", "Text Input"),
                            ("image", "Image OCR"),
                            ("voice", "Voice Recognition"),
                        ],
                        max_length=10,
                    ),
                ),
                (
                    "input_text",
                    models.TextField(help_text="Original or processed text input"),
                ),
                (
                    "input_file",
                    models.FileField(blank=True, null=True, upload_to="conversations/"),
                ),
                (
                    "medications_analyzed",
                    models.JSONField(help_text="List of medications analyzed"),
                ),
                (
                    "drug_interactions",
                    models.JSONField(help_text="Drug interaction analysis results"),
                ),
                ("recommendations", models.TextField(help_text="AI recommendations")),
                (
                    "safety_score",
                    models.FloatField(
                        blank=True, help_text="Safety score (0-100)", null=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_favorite", models.BooleanField(default=False)),
                ("notes", models.TextField(blank=True, help_text="User notes")),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="conversations",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Conversation History",
                "verbose_name_plural": "Conversation Histories",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="DrugDatabase",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200, unique=True)),
                ("generic_name", models.CharField(blank=True, max_length=200)),
                (
                    "brand_names",
                    models.JSONField(default=list, help_text="List of brand names"),
                ),
                ("drug_class", models.CharField(blank=True, max_length=100)),
                ("description", models.TextField(blank=True)),
                (
                    "dosage_forms",
                    models.JSONField(default=list, help_text="Available dosage forms"),
                ),
                (
                    "common_dosages",
                    models.JSONField(default=list, help_text="Common dosage ranges"),
                ),
                ("contraindications", models.TextField(blank=True)),
                (
                    "side_effects",
                    models.JSONField(default=list, help_text="Common side effects"),
                ),
                ("warnings", models.TextField(blank=True)),
                (
                    "major_interactions",
                    models.JSONField(default=list, help_text="Major drug interactions"),
                ),
                (
                    "moderate_interactions",
                    models.JSONField(
                        default=list, help_text="Moderate drug interactions"
                    ),
                ),
                (
                    "minor_interactions",
                    models.JSONField(default=list, help_text="Minor drug interactions"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="UserFeedback",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "rating",
                    models.IntegerField(
                        choices=[
                            (1, "Very Poor"),
                            (2, "Poor"),
                            (3, "Average"),
                            (4, "Good"),
                            (5, "Excellent"),
                        ]
                    ),
                ),
                ("feedback_text", models.TextField(blank=True)),
                ("is_helpful", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "conversation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="feedback",
                        to="core.conversationhistory",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "unique_together": {("user", "conversation")},
            },
        ),
    ]
